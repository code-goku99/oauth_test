===============================================================================================================================
	Eureka with multiple server instance
===============================================================================================================================
> server.port=0 => The Application will be running on random port number.
when you run an instnace it will be running on random port Ex: 52001 and another instances at 52002 port
But when we check in Eureka we can see only one instance as running  instead of 2.
To achieve and to check in eureka to have different instances. We have to do the following

For the server to run on multiple instances. we have config a property in application.property file.
so that we have a unique instance id 
*eureka.instance.instance-id = ${spring.application.name}:${instanceId:${random.value}}*
or we can hard code
  In eureka server we can see 2 instances
  Ex: UP (2) - resource-server:3eb76911524a85d8ff2582f38bfa84e0 , resource-server:2212e4708a9426706204900826a5c705
  
  We can pass custom value instead of random instance id:
  
  1) in termainal window change to resouce server directory
  2) Run mvn package
  3) Now start up the new instance with the followuing command
  	mvn spring-boot:run -Dspring.boot.run.arguments=--instanceId=sandeep
  	
  	Now in eureka we have Ex: resource-server:sandeep
  	
 =============================================================================================================================== 
 
 To use Api gateway project to use default spring load balancing replace the uri as below in applciation.propertiees
Replace this as
--------------This is Resource server routing in Api Gatway---------------------------------------------- 
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=http://localhost:2000
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie	 
-----------------------------------------------------------------
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://<name of the application> => lb://resource-server
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
--------------------------------------------------------------
lb://resource-server this details is taken by Eureka Discovery Serivce project
Fetch form eureka all services > take the port and ip 